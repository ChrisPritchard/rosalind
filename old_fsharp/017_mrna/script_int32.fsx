
#load "../codons.fs"

//let input = "MA"
let input = "MDCVGMTHQMTYNSANFSVLKEGWCLITCGVLESIMERGKKLENNRQDMTKDNSTFIEKQKWMLGFIVRCRCQHKQFHEDSKKFYFGSCWTAMRMDTPTPEGVLYCCMIKEMMMAKRDYYSSTRCATGVDWLSDRQCCREKCVMTITVWLRFLQVSHLWDYKYQVCWTILEYVFWTDTAVFGDWRGGGDNGTAYLDEVNCSHEKSATHKICAGFPQRSSEVGQIMMYVMNVTKHFTMRGQWMVEFMLCEWGKIPCQLQLHGMKMLILNLVVIRCWQIIMVEFRPMLVCSYQLNWGETYWPHIRLKRAEFIIWADISKPWIEGHRYPTRHRFAEKWQREFNPVFQDEINDWICPATFWEMDGKDHYNYYIQIHASPKHVKAEIQGVICPQAKDTCIVTKERGDGETAVQQNKQHTGLLWTCSNRVPFIVVMTCHLLFFCFLTRKCNWGGRRLICYWGHSPEVSSPLWQQQSTWFRLGVQYIMVDCHMQFPWRYPFMFHAEPSDYFKSTIYLWSLGMFPVPADRDYRQFVAYEPCGKIQEPTMMSPNCKIEETVHLKYNFEMKETMNYGIEARKRSQISGWVTTMRIYETISLEDEPCGVKFQQVHGWCFTQSIHGDWNAHWWHEGPEALRALNIDGACKKDDGLGLKEETTVIPQHHKQVSDFESYHKDSQPQPVTFWVAKPPHSLMLAGYHREQTNGVDEDFGETGFYWKVRVSYMDIHGFMMRMVGMTKHDQMVMDMCVQYVKLPPMFWWKVAENSCMGTPDDGGDLMMISSGRPRAEARHNKVVMVDKYRRITNVCSREQDWDTIGPQQALQPLRFDCVISVHRKSSLLCWYREDRKKKHSGVGKFDFQSRDWYPQQWSVTKVLAYKTMKYGPMRYEIQMCFVGMMMAAMWFDYRHWGTYMLNQAKKQACSPCKVMSMEQEIFYRNGVYFETAWMNNMVSAYTTWFTLAVLITVCDFKTAWYCDEYTGGIYMKDWRDGWTNIRIMDSKFVESTSME"

let counts = 
    Codons.table 
    |> Map.toArray 
    |> Array.groupBy snd 
    |> Array.filter (fst >> (<>) "Stop") 
    |> Array.map (fun (key, codons) -> char key, codons.Length) 
    |> Map.ofArray

let mod1mil = (3, input) ||> Seq.fold (fun total c -> (total * counts.[c]) % 1000000)

printfn "result: %A" mod1mil